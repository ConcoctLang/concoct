# Concoct CMake Configuration
cmake_minimum_required(VERSION 3.1.0)
set(PROJECT concoct)
project(${PROJECT})
include_directories(include)
file(GLOB SOURCES src/*.c src/vm/*.c)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "bin")
set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(OBJTEST_SOURCES src/debug.c src/memory.c src/types.c src/tests/objtest.c)
set(STACKTEST_SOURCES src/debug.c src/memory.c src/types.c src/vm/instructions.c src/vm/stack.c src/tests/stacktest.c)

if(MSVC)
	set(CMAKE_C_FLAGS "/W4 /WX /D_CRT_SECURE_NO_WARNINGS")
else()
	set(CMAKE_C_FLAGS "-Wall -Wextra -pedantic")
endif()

add_executable(${PROJECT} ${SOURCES})
add_executable(objtest ${OBJTEST_SOURCES})
add_executable(stacktest ${STACKTEST_SOURCES})

# Check for math library availability
include(CheckFunctionExists)
if(NOT ROUND_FUNCTION_EXISTS AND NOT NEED_LINKING_AGAINST_LIBM)
	CHECK_FUNCTION_EXISTS(round ROUND_FUNCTION_EXISTS)
	if(NOT ROUND_FUNCTION_EXISTS)
		unset(ROUND_FUNCTION_EXISTS CACHE)
		list(APPEND CMAKE_REQUIRED_LIBRARIES m)
		CHECK_FUNCTION_EXISTS(round ROUND_FUNCTION_EXISTS)
		if(ROUND_FUNCTION_EXISTS)
			set(NEED_LINKING_AGAINST_LIBM True CACHE BOOL "" FORCE)
		else()
			message(FATAL_ERROR "round() function is not available!")
		endif()
	endif()
endif()
if(NEED_LINKING_AGAINST_LIBM)
	target_link_libraries(${PROJECT} m)
	target_link_libraries(objtest m)
	target_link_libraries(stacktest m)
endif()
message("Thank you for using Concoct!")
